#include<stdio.h> 
int main() 
{ 
      int i, n, t = 0, x, counter = 0, tq; //total
      int wait_time = 0, TAT = 0, arrival_time[10], burst_time[10], temp[10]; 
      float average_wait_time, average_TAT;
      printf("\nEnter t Number of Processes:\t"); 
      scanf("%d", &n); 
      x = n; 
      for(i = 0; i < n; i++) 
      {
            printf("\nEnter Details of Process[%d]\n", i + 1);
            printf("Arrival Time:\t");
            scanf("%d", &arrival_time[i]);
            printf("Burst Time:\t");
            scanf("%d", &burst_time[i]); 
            temp[i] = burst_time[i];
      } 
      printf("\nEnter Time Quantum:\t"); 
      scanf("%d", &tq); 
      printf("\nProcess ID\t\tBurst Time\t Turnaround Time\t Waiting Time\n");
      for(t = 0, i = 0; x != 0;) 
      { 
            if(temp[i] <= tq && temp[i] > 0) 
            { 
                  t = t + temp[i]; 
                  temp[i] = 0; 
                  counter = 1; 
            } 
            else if(temp[i] > 0) 
            { 
                  temp[i] = temp[i] - tq; 
                  t = t + tq; 
            } 
            if(temp[i] == 0 && counter == 1) 
            { 
                  x--; 
                  printf("\nProcess[%d]\t\t%d\t\t %d\t\t\t %d", i + 1, burst_time[i], t - arrival_time[i], t - arrival_time[i] - burst_time[i]);
                  wait_time = wait_time + t - arrival_time[i] - burst_time[i]; 
                  TAT = TAT + t - arrival_time[i]; 
                  counter = 0; 
            } 
            if(i == n - 1) 
            {
                  i = 0; 
            }
            else if(arrival_time[i + 1] <= t) 
            {
                  i++;
            }
            else 
            {
                  i = 0;
            }
      } 
      average_wait_time = wait_time * 1.0 / n;
      average_TAT = TAT * 1.0 / n;
      printf("\n\nAverage Waiting Time:\t%f", average_wait_time); 
      printf("\nAvg Turnaround Time:\t%f\n", average_TAT); 
      return 0; 
}
